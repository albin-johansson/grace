#include "grace/common.hpp"

namespace grace {

auto to_string(VkResult result) -> const char*
{
#define RESULT_CASE(X) \
  case VK_##X:         \
    return #X

  switch (result) {
    RESULT_CASE(SUCCESS);
    RESULT_CASE(NOT_READY);
    RESULT_CASE(TIMEOUT);
    RESULT_CASE(EVENT_SET);
    RESULT_CASE(EVENT_RESET);
    RESULT_CASE(INCOMPLETE);
    RESULT_CASE(ERROR_OUT_OF_HOST_MEMORY);
    RESULT_CASE(ERROR_OUT_OF_DEVICE_MEMORY);
    RESULT_CASE(ERROR_INITIALIZATION_FAILED);
    RESULT_CASE(ERROR_DEVICE_LOST);
    RESULT_CASE(ERROR_MEMORY_MAP_FAILED);
    RESULT_CASE(ERROR_LAYER_NOT_PRESENT);
    RESULT_CASE(ERROR_EXTENSION_NOT_PRESENT);
    RESULT_CASE(ERROR_FEATURE_NOT_PRESENT);
    RESULT_CASE(ERROR_INCOMPATIBLE_DRIVER);
    RESULT_CASE(ERROR_TOO_MANY_OBJECTS);
    RESULT_CASE(ERROR_FORMAT_NOT_SUPPORTED);
    RESULT_CASE(ERROR_FRAGMENTED_POOL);
    RESULT_CASE(ERROR_UNKNOWN);
    RESULT_CASE(ERROR_OUT_OF_POOL_MEMORY);
    RESULT_CASE(ERROR_INVALID_EXTERNAL_HANDLE);
    RESULT_CASE(ERROR_FRAGMENTATION);
    RESULT_CASE(ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS);
    RESULT_CASE(PIPELINE_COMPILE_REQUIRED);
    RESULT_CASE(SUBOPTIMAL_KHR);         // From swapchain extension.
    RESULT_CASE(ERROR_OUT_OF_DATE_KHR);  // From swapchain extension.
    default:
      return "???";
  }
}

}  // namespace grace